CREATE TABLE IF NOT EXISTS 'User' (
  'ID' INTEGER NOT NULL UNIQUE PRIMARY KEY AUTOINCREMENT,
  'User' TEXT NOT NULL UNIQUE,
  'Password' TEXT NOT NULL,
  'AccountType' TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS 'Class' (
  'ID' INTEEGR NOT NULL UNIQUE PRIMARY KEY AUTOINCREMENT,
  'OwnerID' INTEGER NOT NULL,
  'Code' TEXT NOT NULL UNIQUE,
  FOREIGN KEY('OwnerID') REFERENCES 'User'('ID'),
);

CREATE TABLE IF NOT EXISTS 'ClassStudents' (
  'StudentID' INTEGER NOT NULL,
  'ClassID' INTEGER NOT NULL,
  FOREIGN KEY('StudentID') REFERENCES 'User'('ID'),
  FOREIGN KEY('ClassID') REFERENCES 'Class'('ID')
);

CREATE TABLE IF NOT EXISTS 'Material' (
  'ID' INTEGER NOT NULL UNIQUE PRIMARY KEY AUTOINCREMENT,
  'ClassID' INTEGER NOT NULL,
  'Title' TEXT NOT NULL,
  'Contents' TEXT,
  FOREIGN KEY('ClassID') REFERENCES 'Class'('ID')
);

CREATE TABLE IF NOT EXISTS 'Assignment' (
  'ID' INTEGER NOT NULL UNIQUE PRIMARY KEY AUTOINCREMENT,
  'ClassID' INTEGER NOT NULL,
  'Title' TEXT NOT NULL,
  'Contents' TEXT,
  'Deadline' INTEGER NOT NULL,
  FOREIGN KEY('ClassID') REFERENCES 'Class'('ID')
);

CREATE TABLE IF NOT EXISTS 'StudentAssignment' (
  'StudentID' INTEGER NOT NULL,
  'AssignmentID' INTEGER NOT NULL,
  'Status' TEXT NOT NULL, -- Assigned, Submitted, Returned, Marked, Missing, Submitted Late 
  FOREIGN KEY('StudentID') REFERENCES 'User'('ID'),
  FOREIGN KEY('AssignmentID') REFERENCES 'Assignment'('ID')
);
